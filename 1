import math 
import datetime as dt 
FORMAT = '%H:%M:%S' 
WEIGHT = 75 
HEIGHT = 175 
K_1 = 0.035 
K_2 = 0.029 
STEP_M = 0.65 
storage_data = {} 
def check_correct_data(data): 
    if len(data) != 2 or data[0] == None or data[1] == None: 
        return False 
    else: 
        return True 
def check_correct_time(time): 
 
    if len(storage_data) > 0: 
        max_time = max(storage_data.keys()) 
        if time <= max_time: 
            return False 
        else:
            return True
    else:
        return True
def get_step_day(steps):
    """Получить количество пройденных шагов за этот день."""
    all_steps = [step for step in storage_data.values()]
    return sum(all_steps) + steps
def get_distance(steps):
    """Получить дистанцию пройденного пути в км."""
    dist = float(steps * STEP_M / 1000)
    return dist
 
def get_spent_calories(dist, current_time):
    """Получить значения потраченных калорий."""
    hours = float(current_time.hour + current_time.minute/60)
    spent_calories = 60*hours*(K_1*WEIGHT + K_2*WEIGHT*((dist/hours)**2/HEIGHT))
    return spent_calories
 
def get_achievement(dist):
    """Получить поздравления за пройденную дистанцию."""
    if dist >= 10:
        return 'Отличный результат! Цель достигнута.'
    elif dist >= 6:
        return 'Неплохо! День был продуктивным.'
    elif dist >= 2:
        return 'Маловато, но завтра наверстаем!'
    else:
        return 'Лежать тоже полезно. Главное — участие, а не победа!'
def show_message(current_time, total_steps, dist, spent_calories, achievement):
     print(f'''
     
Время: {current_time}. 
Количество шагов за сегодня: {total_steps}.
Дистанция составила {dist:.2f} км.
Вы сожгли {spent_calories:.2f} ккал. 
{achievement}''')
def accept_package(data):
    """Обработать пакет данных."""
    if check_correct_data(data) is False:
        return 'Некорректный пакет'
    time, steps = data
    current_time = dt.datetime.strptime(time, FORMAT).time()
    if check_correct_time(current_time) is False:
        return 'Некорректное значение времени'
    total_steps = get_step_day(steps)
    dist = get_distance(total_steps)
    spent_calories = get_spent_calories(dist, current_time)
    achievement = get_achievement(dist)
    show_message(current_time, total_steps, dist, spent_calories, achievement)
    storage_data[current_time] = steps
    return storage_data
package_0 = ('2:00:01', 505)
package_1 = (None, 3211)
package_2 = ('9:36:02', 15000)
package_3 = ('9:36:02', 9000)
package_4 = ('8:01:02', 7600)
 
accept_package(package_0)
accept_package(package_1)
accept_package(package_2)
accept_package(package_3)
accept_package(package_4)
